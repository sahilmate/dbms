/*--DBMSL-4
Unnamed PL/SQL code block: Use of Control structure and Exception handling is
mandatory.
Suggested Problem statement:
Consider Tables:
1. Borrower(Roll_no, Name, DateofIssue, NameofBook, Status)
2. Fine(Roll_no,Date,Amt)
Accept Roll_no and NameofBook from user. 
• Check the number of days (from date of issue). 
• If days are between 15 to 30 then fine amount will be Rs 5per day. 
• If no. of days>30, per day fine will be Rs 50 per day and for days less than 30, Rs. 5 perday. 
• After submitting the book, status will change from I to R. 
• If condition of fine is true, then details will be stored into fine table. 
• Also handles the exception by named exception handler or user define exception handler.
*/
CREATE OR REPLACE FUNCTION calfine(days NUMBER)
    RETURN NUMBER IS
        amount NUMBER := 0;
    BEGIN
        IF (days > 15 AND days < 30) THEN
            amount := days * 5;
        ELSIF (days > 30) THEN
            amount := days * 50;
        ELSE
            amount := 0;
        END IF;
    RETURN amount;
    END;
/
--library.sql
SET SERVEROUTPUT ON;
DECLARE
    roll_num NUMBER(5);       
    book_name VARCHAR2(20);     
    nm VARCHAR2(25);            
    s VARCHAR2(10);             
    d_issue DATE;               
    days NUMBER(5);          
    amt NUMBER(10);
BEGIN
    roll_num := &roll_num;
    book_name := '&book_name';

    SELECT roll_no, name, name_of_book, status, date_of_issue 
    INTO roll_num, nm, book_name, s, d_issue 
    FROM borrower 
    WHERE roll_no = roll_num
    AND ROWNUM = 1;

    days := SYSDATE - d_issue;

    DBMS_OUTPUT.PUT_LINE('Roll no = ' || roll_num);
    DBMS_OUTPUT.PUT_LINE('Name = ' || nm);
    DBMS_OUTPUT.PUT_LINE('Book name = ' || book_name);
    DBMS_OUTPUT.PUT_LINE('Status = ' || s);
    DBMS_OUTPUT.PUT_LINE('Days are = ' || days);

    amt := calfine(days);
    DBMS_OUTPUT.PUT_LINE('Fine amount is = ' || amt);

    IF amt > 0 THEN
    UPDATE borrower 
    SET status = 'R' 
    WHERE roll_no = roll_num AND name_of_book = book_name;

    INSERT INTO fine (roll_no, date_fine, amount)
    VALUES (roll_num, SYSDATE, amt);
END IF;
END;
/
